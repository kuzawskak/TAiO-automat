function[] = START_rozpoznawanie_liter()
%Okno programu
handles.figure = figure('units', 'pixels', ...
                'position', [500 100 400 620], ...
                'menubar', 'none', ...
                'name', 'Automaty', ...
                'color', 'white', ...
                'numbertitle', 'off', ...
                'resize', 'off');

%Tytu³
uicontrol('style', 'tex', ...
          'position', [0 590 400 20],...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'Parametry automatów:');

%Labelki
uicontrol('style', 'tex', ...
          'position', [20 550 240 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'liczba stanow odrzucajacych: ');  
uicontrol('style', 'tex', ...
          'position', [20 510 220 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'ograniczenie dla niedeterm: ');   
uicontrol('style', 'tex', ...
          'position', [20 470 170 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'wartoœæ maksymalna: ');
uicontrol('style', 'tex', ...
          'position', [20 430 235 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'œrednia rozk³adu normalnego: ');   
uicontrol('style', 'tex', ...
          'position', [20 390 250 20], ...  
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'wariancja rozk³adu normalnego: '); 
uicontrol('style', 'tex', ...
          'position', [20 350 100 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'liczba kopii: ');
uicontrol('style', 'tex', ...
          'position', [20 310 100 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'liczba cech: ');
uicontrol('style', 'tex', ...
          'position', [20 270 160 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight','bold', ... 
          'string', 'liczba klas symboli: ');
uicontrol('style', 'tex', ...
          'position', [20 230 110 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'liczba iteracji: ');
uicontrol('style', 'tex', ...
          'position', [20 190 100 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'liczba rojów: ');
uicontrol('style', 'tex', ...
          'position', [20 150 200 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'liczba symboli do testów: ');
uicontrol('style', 'tex', ...
          'position', [20 110 135 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'rodzaj automatu: ');
uicontrol('style', 'tex', ...
          'position', [20 70 120 20], ...
          'backgroundcolor', get(handles.figure, 'color'), ...
          'fontsize', 12, 'fontweight', 'bold', ... 
          'string', 'symbole obce: ');
         
%Edit texty
handles.odrzucajace = uicontrol('style', 'edit', ...
                         'position', [265 550 100 25], ...
                         'string', '2', ...
                         'callback', {@czy_liczba});
handles.ograniczenie = uicontrol('style', 'edit', ...
                         'position', [250 510 100 25], ...
                         'string', '3', ...
                         'callback', {@czy_liczba}); 
handles.max = uicontrol('style', 'edit', ...
                         'position', [200 470 100 25], ...
                         'string', '20', ...
                         'callback', {@czy_liczba});
handles.srednia = uicontrol('style', 'edit', ...
                         'position', [265 430 100 25], ...
                         'string', '0', ...
                         'callback', {@czy_liczba});
handles.wariancja = uicontrol('style', 'edit', ...
                         'position', [280 390 100 25], ...
                         'string', '3', ...
                         'callback', {@czy_liczba});
handles.kopie = uicontrol('style', 'edit', ...
                         'position', [130 350 100 25], ...
                         'string', '100', ...
                         'callback', {@czy_liczba});
handles.cechy = uicontrol('style', 'edit', ...
                         'unit', 'pix', ...
                         'position', [130 310 100 25], ...
                         'string', '5', ...
                         'callback', {@czy_liczba});
handles.symbole = uicontrol('style', 'edit', ...
                         'position', [190 270 100 25], ...
                         'string', '5', ...
                         'callback', {@czy_liczba});
handles.iteracje = uicontrol('style', 'edit', ...
                         'position', [140 230 100 25], ...
                         'string', '100', ...
                         'callback', {@czy_liczba});
handles.roje = uicontrol('style', 'edit', ...
                         'position', [130 190 100 25], ...
                         'string', '30', ...
                         'callback', {@czy_liczba});
handles.symbole_testowe = uicontrol('style', 'edit', ...
                         'position', [230 150 100 25], ...
                         'string', '20', ...
                         'callback', {@czy_liczba});
handles.rodzaj_automatu = uicontrol('style', 'popup', ...
                         'position', [165 110 130 25], ...
                         'string', {'Deterministyczny', ...
                                    'Niedeterministyczny', ...
                                    'Rozmyty'});
handles.czy_odrzuca = uicontrol('style', 'popup', ...
                         'position', [150 70 200 25], ...
                         'string', {'z odrzucaniem elementów obcych', ...
                                    'bez odrzucania elementów obcych'});                    
             
%Przycisk
handles.computeButton = uicontrol('style', 'push', ...
                'units', 'pix', ...
                'position', [145 10 100 50], ...
                'fontsize', 14, ...
                'string', 'Symuluj', ...
                'callback', @test_skrypt);

guidata(handles.figure, handles);
             
end
